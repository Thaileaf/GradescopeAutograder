#!/usr/bin/env python3

import sys
import lizard
import os

def test(func):
    fn_name = func.long_name
    error_found = False

    #  more than 100 lines of code?
    if func.nloc > 100:
        print('Function \'{}\' exceeds 100 lines of code'.format(fn_name))
        error_found = True

    ccn = func.cyclomatic_complexity
    #  cyclomatic complexity exceeds 4? (value of 4 used as example)
    if ccn > 4:
        print('Function \'{}\' is too complex.'.format(fn_name))
        print('Observed complexity: {}'.format(ccn))
        print('Must not exceed: {}'.format(4))
        error_found = True

    return error_found

if __name__ == "__main__":

    directory_path = '/autograder/submission'
    cpp_files = [f for f in os.listdir(directory_path) if f.endswith('.cpp')]
    has_errors = False

    for filename in cpp_files:
        print(filename, "functions")
        info = lizard.analyze_file(directory_path + "/" + filename)

        for fn in info.function_list:
            print(fn.name, " has ", fn.nloc, " lines")
            if test(fn):
                has_errors = True

        print()

    exit(1)

   
