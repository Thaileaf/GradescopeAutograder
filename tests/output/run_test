#!/usr/bin/env python3
import subprocess

def test_generated_output():
    # Path to the executable that generates the output
    executable_path = '../hw01.exe'
    # Execute the program and capture its output
    # subprocess.PIPE indicates a pipe to the standard stream should be opened
    try:
        process = subprocess.Popen(executable_path,
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE)
    except FileNotFoundError as e:
        print("hw01.exe is not found")
        exit(1)
    stdout, stderr = process.communicate()
    
    # Decode the output from bytes to string
    generated_output = stdout.decode('utf-8')

    # Path to the expected output file
    expected_output_path = './output.txt'
    
    # Read the expected output
    with open(expected_output_path, 'r') as file:
        expected_output = file.read()

    print("Generated output:")
    print("============================")
    print(generated_output)
    print("============================")
    print("Expected output:")
    print("============================")
    print(expected_output)
    print("============================")
    # Assert that the generated output matches the expected output
    try:
        assert generated_output == expected_output
    except AssertionError as e:
        print("Output doesn't match")
        exit(1)
    exit(0)

if __name__ == '__main__':
    test_generated_output()
